{
  //* ===== EDITOR ===== *//
  "editor.fontSize": 14,
  "editor.fontFamily": "Fira Code, -apple-system, monospace",
  "editor.fontLigatures": true,
  "editor.selectionHighlight": false,
  "editor.scrollBeyondLastLine": false,
  "editor.mouseWheelScrollSensitivity": 2,
  "editor.inlineSuggest.enabled": true, // for inline-parameters ext
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "hidden",
  "editor.cursorBlinking": "solid",
  "editor.quickSuggestionsDelay": 200,
  "editor.foldingStrategy": "auto",
  "editor.snippetSuggestions": "inline",
  "editor.minimap.enabled": false,
  "editor.acceptSuggestionOnEnter": "smart",
  "editor.emptySelectionClipboard": false,
  "editor.dragAndDrop": true,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.formatOnType": false,
  "editor.renderWhitespace": "none",
  "editor.overviewRulerBorder": true,
  "editor.rulers": [],
  "editor.quickSuggestions": {
    "strings": true
  },
  "editor.unicodeHighlight.allowedLocales": {
    "ru": true
  },
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true,
    "source.fixAll.stylelint": true
  },
  "editor.bracketPairColorization.enabled": false,
  "editor.wordWrapColumn": 200,
  "editor.wordWrap": "wordWrapColumn",
  "editor.wrappingStrategy": "advanced",
  "editor.wrappingIndent": "none",
  "editor.lineNumbers": "relative",

  //* ===== WORKBENCH ===== *//
  "workbench.editor.showTabs": true,
  "workbench.iconTheme": null,
  "workbench.startupEditor": "welcomePageInEmptyWorkbench",
  "workbench.editor.pinnedTabSizing": "compact",
  "workbench.editor.untitled.hint": "hidden",
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "workbench.preferredDarkColorTheme": "White Night",
  "workbench.preferredLightColorTheme": "White",
  "terminal.integrated.macOptionClickForcesSelection": true,
  "terminal.integrated.defaultProfile.osx": "tmux",
  "terminal.integrated.shellIntegration.enabled": false,
  "terminal.integrated.env.osx": {
    "VSCODE": "1"
  },
  "terminal.integrated.localEchoExcludePrograms": [
    "vim",
    "vi",
    "nano",
    "tmux",
    "nvim",
    "lvim"
  ],

  //* ===== SIDEBAR ===== *//
  "explorer.confirmDragAndDrop": false,
  "explorer.compactFolders": false,
  "explorer.confirmDelete": false,
  "search.searchOnType": false,
  "search.actionsPosition": "auto",
  "search.followSymlinks": false,
  "search.showLineNumbers": true,
  "extensions.ignoreRecommendations": true,
  "window.autoDetectColorScheme": true,
  "window.title": "${activeEditorShort}${separator}${rootName}",
  "files.simpleDialog.enable": true,
  "debug.console.closeOnEnd": true,
  "files.insertFinalNewline": true,
  "diffEditor.wordWrap": "off",
  "terminal.integrated.fontFamily": "Hack Nerd Font Mono",

  //* ===== Editor ===== *//
  "git.ignoreMissingGitWarning": true,
  "python.defaultInterpreterPath": "/Users/maxkiselev/.asdf/shims/python",
  "python.linting.pylintEnabled": true,
  "python.linting.enabled": true,
  "html-css-class-completion.enableEmmetSupport": true,
  "settingsSync.ignoredExtensions": ["juliettepretot.lucy-vscode"],
  "css.lint.unknownVendorSpecificProperties": "warning",
  "files.trimTrailingWhitespace": false,
  "workbench.editor.autoLockGroups": {
    "vscode.markdown.preview.editor": true
  },
  //* ===== GIT ===== *//
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.codeLens.enabled": false,
  "git.autofetch": true,
  "git.autoStash": true,
  "editor.guides.indentation": true,
  "gitlens.advanced.messages": {
    "suppressLineUncommittedWarning": true
  },
  "git.allowForcePush": true,
  "scm.repositories.sortOrder": "path",
  "gitlens.currentLine.scrollable": false,
  "gitlens.currentLine.pullRequests.enabled": false,

  // macros
  "macros": {
    "switchToEditorHidePanel": [
      "workbench.action.workbench.action.focusLastEditorGroup",
      "workbench.action.closePanel"
    ],
    "switchToEditorHideSidebar": [
      "workbench.action.workbench.action.focusLastEditorGroup",
      "workbench.action.closeSidebar"
    ]
  },
  "terminal.integrated.commandsToSkipShell": [
    "macros.switchToEditorHidePanel",
    "switchToEditorHideSidebar",
    "workbench.action.navigateUp"
  ],

  "workbench.editor.closeEmptyGroups": true,
  "editor.autoClosingBrackets": "beforeWhitespace",
  "editor.autoClosingQuotes": "beforeWhitespace",
  "workbench.editor.limit.enabled": true,

  //* ===== Languages ===== *//

  // Golang
  "[go]": {
    "editor.defaultFormatter": "golang.go",
    "editor.formatOnPaste": true,
    "editor.tabSize": 2,
    "editor.insertSpaces": false,
    "editor.foldingStrategy": "auto"
  },
  "gopls": {
    "build.experimentalWorkspaceModule": false
  },
  "go.coverOnSave": true,
  "go.lintTool": "golangci-lint",
  "go.lintFlags": ["--fast"],
  "go.toolsManagement.autoUpdate": true,

  // PHP
  "[php]": {
    "editor.defaultFormatter": "bmewburn.vscode-intelephense-client"
  },

  // JSON
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "json.maxItemsComputed": 20000,

  // Python
  "[python]": {
    "editor.defaultFormatter": "ms-python.python"
  },
  "python.languageServer": "Pylance",

  // HTML
  "[html]": {
    "editor.tabSize": 2,
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "emmet.triggerExpansionOnTab": true,
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.showExpandedAbbreviation": "inMarkupAndStylesheetFilesOnly",
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "html": "html5",
    "vue-html": "html"
  },
  "emmet.syntaxProfiles": {
    "php": "html",
    "html": {
      "attr_quotes": "double",
      "tag_nl": true,
      "tag_nl_leaf": true
    }
  },
  "emmet.preferences": {
    "caniuse.enabled": true,
    "bem.elementSeparator": "__",
    "bem.modifierSeparator": "--",
    "bem.shortElementPrefix": "-",
    "lorem.defaultLang": "en",
    "output.reverseAttributes": true
  },

  // CSS
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "[scss]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "workbench.list.smoothScrolling": true,
  "editor.smoothScrolling": true,

  // JavaScript
  "javascript.updateImportsOnFileMove.enabled": "never",

  // VueJS
  "[vue]": {
    "editor.defaultFormatter": null
  },
  "volar.vueserver.petiteVue.processHtmlFile": true,
  "volar.vueserver.vitePress.processMdFile": true,

  // SVG
  "[svg]": {
    "editor.defaultFormatter": "jock.svg"
  },
  "svg.completion.emmet": true,
  "svg.completion.showAdvanced": true,
  "svg.minify.addAttributesToSVGElement": true,
  "svg.preview.translateExternalAddress": true,

  // Markdown
  "[markdown]": {
    "editor.unicodeHighlight.ambiguousCharacters": false,
    "editor.unicodeHighlight.invisibleCharacters": false,
    "editor.wordWrap": "wordWrapColumn",
    "editor.wrappingStrategy": "simple",
    "editor.wrappingIndent": "same",
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",

    "editor.quickSuggestions": {
      "comments": "off",
      "strings": "off",
      "other": "off"
    }
  },

  // YAML
  "[yml]": {
    "editor.detectIndentation": false,
    "editor.tabSize": 2,
    "editor.insertSpaces": true
  },
  "files.associations": {
    "*.yml": "yaml"
  },

  // Docker
  "[dockercompose]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.formatOnSaveMode": "modificationsIfAvailable"
  },

  "json.format.enable": false,
  "css.validate": false, // Disable built-in lint
  "less.validate": false, // Disable built-in lint
  "scss.validate": false, // Disable built-in lint
  "stylelint.enable": true, // Enable stylelint
  "stylelint.validate": ["css", "less", "postcss", "vue"], // Add vue files
  "editor.cursorSmoothCaretAnimation": "on",

  "markdownlint.ignore": ["~/Desktop/throwaway/**/*.md"],
  "markdown-image.local.path": "/images",
  "pasteImage.insertPattern": "![[${imageFilePath}]]",
  "pasteImage.path": "${projectRoot}/!",
  "pasteImage.filePathConfirmInputBoxMode": "onlyName",
  "pasteImage.basePath": "${projectRoot}",
  "pasteImage.showFilePathConfirmInputBox": true,
  "files.autoSave": "onFocusChange",
  "files.autoSaveDelay": 2000,
  "search.searchEditor.reusePriorSearchConfiguration": true,
  "terminal.integrated.gpuAcceleration": "off",
  "editor.suggest.showIcons": false,
  "breadcrumbs.icons": false,
  "outline.icons": false,
  "whichkey.showIcons": false,
  "workbench.editor.showIcons": false,

  //* ====== UI ðŸ’… ====== *//
  "editor.tokenColorCustomizations": {
    "[White Night]": {
      "textMateRules": [
        {
          "scope": ["comment", "string.quoted.docstring"],
          "settings": {
            "fontStyle": "italic",
            "foreground": "#5c5c65"
          }
        },
        {
          "scope": ["string", "string.quoted"],
          "settings": {
            "foreground": "#ffffff",
            "fontStyle": "italic"
          }
        }
      ]
    }
  },
  "workbench.colorCustomizations": {
    "[White]": {
      // common
      "editorInlayHint.parameterBackground": "#00000000",
      "editorInlayHint.parameterForeground": "#bec9d3",
      "editorWarning.foreground": "#e5c07b",
      "editorGutter.commentRangeForeground": "#fff",
      "button.background": "#c1c2c3",
      "button.foreground": "#222425",
      "button.hoverBackground": "#d9dadb",
      "button.secondaryForeground": "#f9f9fa",
      "button.secondaryBackground": "#5a5b5c",
      "button.secondaryHoverBackground": "#797a7b",
      // theme specific
      "editorSuggestWidget.focusHighlightForeground": "#fff",
      "editorSuggestWidget.highlightForeground": "#000",
      "list.highlightForeground": "#000",
      "list.focusHighlightForeground": "#fff",
      "editorCursor.foreground": "#000",
      "editorOverviewRuler.border": "#fff",
      "gitDecoration.addedResourceForeground": "#587c0c",
      "gitDecoration.conflictingResourceForeground": "#6c6cc4",
      "gitDecoration.deletedResourceForeground": "#ad0707",
      "gitDecoration.ignoredResourceForeground": "#8e8e90",
      "gitDecoration.modifiedResourceForeground": "#ff9d00",
      "gitDecoration.stageDeletedResourceForeground": "#ad0707",
      "gitDecoration.stageModifiedResourceForeground": "#20ffb8",
      "gitDecoration.submoduleResourceForeground": "#1258a7",
      "gitDecoration.untrackedResourceForeground": "#007100",
      "activityBar.foreground": "#000",
      "activityBar.inactiveForeground": "#00000040",
      "editor.lineHighlightBorder": "#0000",
      "tab.activeBackground": "#000",
      "tab.activeForeground": "#fff",
      "tab.inactiveBackground": "#fff",
      "tab.inactiveForeground": "#000",
      "terminal.ansiBrightBlack": "#6666669a"
    },
    "[White Night]": {
      // common
      "editorInlayHint.parameterBackground": "#00000000",
      "editorInlayHint.parameterForeground": "#5c5c65",
      "editorWarning.foreground": "#e5c07b",
      "editorGutter.commentRangeForeground": "#fff",
      "button.background": "#c1c2c3",
      "button.foreground": "#222425",
      "button.hoverBackground": "#d9dadb",
      "button.secondaryForeground": "#f9f9fa",
      "button.secondaryBackground": "#5a5b5c",
      "button.secondaryHoverBackground": "#797a7b",
      "gitDecoration.addedResourceForeground": "#81b88b",
      "gitDecoration.conflictingResourceForeground": "#6c6cc4",
      "gitDecoration.deletedResourceForeground": "#c74e39",
      "gitDecoration.ignoredResourceForeground": "#8c8c8c",
      "gitDecoration.modifiedResourceForeground": "#b4a693",
      "gitDecoration.stageDeletedResourceForeground": "#c74e39",
      "gitDecoration.stageModifiedResourceForeground": "#e2c08d",
      "gitDecoration.submoduleResourceForeground": "#8db9e2",
      "gitDecoration.untrackedResourceForeground": "#73c991",
      // theme specific
      "editorSuggestWidget.focusHighlightForeground": "#000",
      "editorSuggestWidget.highlightForeground": "#fff",
      "list.highlightForeground": "#fff",
      "list.focusHighlightForeground": "#000",
      "focusBorder": "#ffffff40",
      "activityBar.foreground": "#fff",
      "activityBar.inactiveForeground": "#ffffff40",
      "activityBar.border": "#ffffff40",
      "editorGroup.border": "#fff",
      "sideBar.border": "#ffffff40",
      "terminal.ansiBrightBlack": "#ffffff40",
      "tab.activeBackground": "#fff",
      "tab.activeForeground": "#000",
      "tab.inactiveBackground": "#000",
      "tab.inactiveForeground": "#fff"
    }
  },
  "search.decorations.colors": false,
  "workbench.editor.decorations.colors": false,

  //* ===== Extensions ===== *//
  // VScode Neovim
  "vscode-neovim.neovimExecutablePaths.darwin": "/Users/maxkiselev/.local/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.darwin": "/Users/maxkiselev/.config/nvim/init.vim",
  "vscode-neovim.neovimInitVimPaths.linux": "$HOME/.config/nvim/init.vim",
  "vscode-neovim.mouseSelectionStartVisualMode": true,
  "vscode-neovim.neovimWidth": 500,
  "vscode-neovim.logLevel": "none",
  "vscode-neovim.logPath": "~/.config/nvim/logfile",
  "vscode-neovim.logOutputToConsole": true,

  "vscode-neovim.highlightGroups.highlights": {
    "Directory": "vim",
    "IncSearch": {
      "backgroundColor": "theme.editor.findMatchBackground",
      "borderColor": "theme.editor.findMatchBorder"
    },
    "Search": {
      "backgroundColor": "theme.editor.findMatchHighlightBackground",
      "borderColor": "theme.editor.findMatchHighlightBorder"
    },
    "Visual": {
      "backgroundColor": "theme.editor.selectionBackground"
    },
    "Conceal": "vim",
    "Substitute": "vim"
  },

  // Auto Hide
  "autoHide.autoHideSideBar": true,
  "autoHide.autoHidePanel": true,
  "autoHide.sideBarDelay": 100,
  "autoHide.panelDelay": 100,
  "autoHide.hideOnOpen": true,

  // Spell check
  "cSpell.ignorePaths": [
    "package-lock.json",
    "node_modules",
    "settings.json",
    "vscode-extension",
    ".git/objects",
    ".vscode",
    ".vscode-insiders"
  ],
  "cSpell.language": "en,ru",
  "cSpell.languageSettings": [
    // goLang spell check settings
    {
      "languageId": "go",
      // Turn off compound words, because it is only checking strings.
      "allowCompoundWords": false,
      // Only check comments and strings
      "includeRegExpList": ["CStyleComment", "string"],
      // Exclude imports, because they are also strings.
      "ignoreRegExpList": [
        // ignore mulltiline imports
        "import\\s*\\((.|[\r\n])*?\\)",
        // ignore single line imports
        "import\\s*.*\".*?\"",
        // ignore go generate directive
        "//\\s*go:generate.*",
        // ignore nolint directive
        "//\\s*nolint:.*"
      ]
    }
  ],
  "cSpell.diagnosticLevel": "Warning",
  "cSpell.userWords": [
    "apperror",
    "btns",
    "Capslock",
    "devicons",
    "dockercompose",
    "hjkl",
    "Karabiner",
    "Laravel",
    "mulltiline",
    "Neovim",
    "nolint",
    "Nuxt",
    "polyfit",
    "polytech",
    "Shortkey",
    "vtools",
    "whichkey",
    "Yabai"
  ],

  // WhichKey (https://vspacecode.github.io/docs/whichkey)
  "whichkey.sortOrder": "alphabetically",
  "whichkey.delay": 500,
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.quickOpen"
    },
    {
      "key": "?",
      "name": "View All References",
      "type": "command",
      "command": "references-view.find",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "s",
      "name": "View All References",
      "type": "command",
      "command": "workbench.action.openSettingsJson",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "k",
      "name": "View All References",
      "type": "command",
      "command": "workbench.action.openGlobalKeybindingsFile",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        },
        {
          "key": " ",
          "name": "quit",
          "type": "command",
          "command": ""
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle explorder",
      "type": "conditional",
      "bindings": [
        {
          "key": "",
          "name": "default",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "when:sideBarVisible && explorerViewletVisible",
          "name": "Hide explorer",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        }
      ]
    },
    // TODO: Add a way to toggle the terminal
    {
      "key": "t",
      "name": "Show terminal",
      "type": "conditional",
      "bindings": [
        {
          "key": "",
          "name": "default",
          "type": "command",
          "command": "extension.multiCommand.execute",
          "args": {
            "sequence": [
              "workbench.action.navigateDown",
              "workbench.action.maximizeEditor"
            ]
          }
        },
        {
          "key": "when:activeEditorGroupLast",
          "name": "Create terminal",
          "type": "command",
          "command": "extension.multiCommand.execute",
          "args": {
            "sequence": [
              "workbench.action.splitEditorDown",
              "workbench.action.navigateDown",
              "workbench.action.createTerminalEditor",
              "workbench.action.previousEditorInGroup",
              "workbench.action.closeActiveEditor",
              "workbench.action.maximizeEditor"
            ]
          }
        }
      ]
    },
    {
      "key": "f",
      "name": "Find & Replace...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "s",
          "name": "Symbol",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "a",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "B",
          "name": "Browse",
          "type": "command",
          "command": "gitlens.openFileInRemote"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "C",
          "name": "Cherry Pick",
          "type": "command",
          "command": "gitlens.views.cherryPick"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "F",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "g",
          "name": "Graph",
          "type": "command",
          "command": "git-graph.view"
        },
        {
          "key": "h",
          "name": "Heatmap",
          "type": "command",
          "command": "gitlens.toggleFileHeatmap"
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "git.viewFileHistory"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "L",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push"
        },
        {
          "key": "P",
          "name": "Push",
          "type": "command",
          "command": "git.pull"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "t",
          "name": "Create Tag",
          "type": "command",
          "command": "git.createTag"
        },
        {
          "key": "T",
          "name": "Delete Tag",
          "type": "command",
          "command": "git.deleteTag"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "\"",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "c",
      "name": "Create...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        }
      ]
    },
    {
      "key": "l",
      "name": "LSP...",
      "type": "bindings",
      "bindings": [
        {
          "key": ";",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "a",
          "name": "Auto Fix",
          "type": "command",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.revealDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.revealDeclaration"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "f",
          "name": "Format",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.goToImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine"
        },
        {
          "key": "n",
          "name": "Next Problem",
          "type": "command",
          "command": "editor.action.marker.next",
          "when": "editorFocus"
        },
        {
          "key": "N",
          "name": "Next Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.nextInFiles",
          "when": "editorFocus"
        },
        {
          "key": "o",
          "name": "Outline",
          "type": "command",
          "command": "outline.focus"
        },
        {
          "key": "p",
          "name": "Prev Problem",
          "type": "command",
          "command": "editor.action.marker.prevInFiles",
          "when": "editorFocus"
        },
        {
          "key": "P",
          "name": "Prev Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.prev",
          "when": "editorFocus"
        },
        {
          "key": "q",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.goToReferences",
          "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "R",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "v",
          "name": "View All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
        },
        {
          "key": "s",
          "name": "Go To Symbol",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "S",
          "name": "Show All Symbols",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        }
      ]
    },
    {
      "key": "m",
      "name": "Mark...",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Clear Bookmarks",
          "type": "command",
          "command": "bookmarks.clear"
        },
        {
          "key": "j",
          "name": "Next Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToNext",
          "when": "editorTextFocus"
        },
        {
          "key": "k",
          "name": "Previous Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToPrevious",
          "when": "editorTextFocus"
        },
        {
          "key": "l",
          "name": "List Bookmarks",
          "type": "command",
          "command": "bookmarks.listFromAllFiles",
          "when": "editorTextFocus"
        },
        {
          "key": "r",
          "name": "Refresh Bookmarks",
          "type": "command",
          "command": "bookmarks.refresh"
        },
        {
          "key": "t",
          "name": "Toggle Bookmark",
          "type": "command",
          "command": "bookmarks.toggle",
          "when": "editorTextFocus"
        },
        {
          "key": "s",
          "name": "Show Bookmarks",
          "type": "command",
          "command": "workbench.view.extension.bookmarks"
        }
      ]
    },
    {
      "key": "n",
      "name": "No Highlight",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":noh<CR>"
    },
    {
      "key": "o",
      "name": "Open...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Directory",
          "type": "command",
          "command": "workbench.action.files.openFolder"
        },
        {
          "key": "r",
          "name": "Recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "f",
          "name": "Files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        }
      ]
    },
    {
      "key": "p",
      "name": "Peek...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.peekDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.peekDeclaration"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.peekImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "p",
          "name": "Toggle Focus",
          "type": "command",
          "command": "togglePeekWidgetFocus",
          "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "t",
          "name": "Type Definition",
          "type": "command",
          "command": "editor.action.peekTypeDefinition"
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "u",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "%",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "y",
      "name": "Sync...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Download Settings",
          "type": "command",
          "command": "extension.downloadSettings"
        },
        {
          "key": "u",
          "name": "Upload Settings",
          "type": "command",
          "command": "extension.updateSettings"
        }
      ]
    },
    {
      "key": " ",
      "name": "commands",
      "type": "command",
      "command": "whichkey.undoKey"
    }
  ],

  // Typograf / TODO: setup whichkey FIXED for typograf
  "vscode-typograf.type": "name",

  // Inline fold
  "inlineFold.unfoldOnLineSelect": true,
  "inlineFold.supportedLanguages": [
    "vue",
    "html",
    "svelte",
    "vue-html",
    "php",
    "blade",
    "erb",
    "twig",
    "nunjucks",
    "django-html",
    "jinja-html",
    "javascript",
    "typescript",
    "javascriptreact",
    "typescriptreact",
    "markdown"
  ],
  "inlineFold.regexGroup": "1",
  "inlineFold.regex": "\\[.*\\]\\((.*)\\)",

  // Custom CSS and JS Loader (~/.vscode/extensions/custom-css-and-js/style.css)
  "vscode_custom_css.imports": [
    "file:///Users/maxkiselev/.vscode/extensions/custom-css-and-js/index.js",
    "file:///Users/maxkiselev/.vscode/extensions/custom-css-and-js/style.css"
  ],
  "vscode_custom_css.staging_dir": "Users/maxkiselev/.vscode/extensions/custom-css-and-js/",

  // Fileutils
  "fileutils.typeahead.enabled": false,

  // REST Client
  "rest-client.defaultHeaders": {
    "Content-Type": "application/json"
  },
  "rest-client.previewOption": "body",
  "rest-client.largeResponseBodySizeLimitInMB": 1,

  // CustomizeUI
  "customizeUI.listRowHeight": 19,
  "customizeUI.statusBarPosition": "bottom",
  "customizeUI.titleBar": "inline",
  "customizeUI.stylesheet": {
    ".line-numbers": "font-size: 12px !important",
    ".monaco-workbench .part.editor>.content .editor-group-container>.title .monaco-icon-label:before": "display: none"
  },
  "customizeUI.activityBar": "bottom",

  // Inline parameters
  "inline-parameters.php.showDollarSign": true,
  "inline-parameters.go.executablePath": "/usr/local/go/bin/go",
  "inline-parameters.python.executablePath": "/Users/maxkiselev/.pyenv/shims/python3",

  // Copilot
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true,
    "python": true
  },
  //* ===== UNSORTED ===== *//
  "cSpell.autoFormatConfigFile": true,
  "cSpell.enableFiletypes": ["!settings.json"],
  "cSpell.spellCheckOnlyWorkspaceFiles": true,
  "terminal.integrated.tabs.defaultIcon": "code",
  "terminal.integrated.allowChords": false,
  "chatgpt.emailAddress": "",
  "chatgpt.password": "",
  "chatgpt.telemetry.disable": true,
  "chatgpt.gpt3.apiKey": "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",
  "chatgpt.gpt3.organization": "wtf403",
  "task.allowAutomaticTasks": "on",
  "chatgpt.method": "GPT3 OpenAI API Key",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.colorTheme": "White Night",
  "workbench.sideBar.location": "right",
  "editor.suggest.selectionMode": "whenTriggerCharacter",
  "markdownlint.config": {
    "MD022": false,
    "MD032": false
  },
  "editor.accessibilitySupport": "off",
  "colorInfo.fields": ["rgb"],
  "editor.colorDecorators": false,
  "window.zoomLevel": 1
}

